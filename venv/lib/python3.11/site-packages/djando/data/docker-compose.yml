version: '3'
services:
    django.test:
        build:
            context: ./runtimes/3.9
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                WWWUSER: '${WWWUSER}'
        image: djando-3.9/app
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            DJANGO_DJANDO: 1
        volumes:
            - '.:/app'
        networks:
            - djando
        depends_on:
            - pgsql
            - redis
#            - selenium
#    selenium:
#        image: 'selenium/standalone-chrome'
#        volumes:
#            - '/dev/shm:/dev/shm'
#        networks:
#            - djando
#        depends_on:
#            - djando.test
    pgsql:
        image: postgres:10
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'djandopgsql:/var/lib/postgresql/data/'
        networks:
            - djando
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'djandoredis:/data'
        networks:
            - djando
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
#    memcached:
#        image: 'memcached:alpine'
#        ports:
#            - '11211:11211'
#        networks:
#            - djando
#    mailhog:
#        image: 'mailhog/mailhog:latest'
#        ports:
#            - 1025:1025
#            - 8025:8025
#        networks:
#            - djando
networks:
    djando:
        driver: bridge
volumes:
    djandopgsql:
        driver: local
    djandoredis:
        driver: local
